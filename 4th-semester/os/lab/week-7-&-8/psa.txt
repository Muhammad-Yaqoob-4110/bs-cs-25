#include <stdio.h>

// Function to sort the processes by priority
void sortProcesses(int n, int bt[], int at[], int pr[], int p[]) {
    int i, j, temp;
    for (i = 0; i < n; i++) {
        for (j = i+1; j < n; j++) {
            if (pr[i] < pr[j]) {
                // Swap process IDs
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
                // Swap burst times
                temp = bt[i];
                bt[i] = bt[j];
                bt[j] = temp;
                // Swap arrival times
                temp = at[i];
                at[i] = at[j];
                at[j] = temp;
                // Swap priorities
                temp = pr[i];
                pr[i] = pr[j];
                pr[j] = temp;
            }
        }
    }
}

int main() {
    int i, n, j, sum = 0;
    float avgwt = 0, avgtt = 0;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    int bt[n], at[n], pr[n], wt[n], tt[n], ct[n], p[n];
    for (i = 0; i < n; i++) {
        printf("Enter the arrival time, burst time, and priority of process %d: ", i+1);
        scanf("%d%d%d", &at[i], &bt[i], &pr[i]);
        p[i] = i;
    }
    sortProcesses(n, bt, at, pr, p);
    for (i = 0; i < n; i++) {
        if (i == 0) {
            ct[i] = at[i] + bt[i];
        }
        else {
            if (at[i] > ct[i-1]) {
                ct[i] = at[i] + bt[i];
            }
            else {
                ct[i] = ct[i-1] + bt[i];
            }
        }
        tt[i] = ct[i] - at[i];
        wt[i] = tt[i] - bt[i];
        avgtt += tt[i];
        avgwt += wt[i];
    }
    avgtt /= n;
    avgwt /= n;
    printf("\nProcess\t\tArrival Time\tBurst Time\tPriority\tCompletion Time\tTurnaround Time\tWaiting Time\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t\t%d\n", p[i]+1, at[i], bt[i], pr[i], ct[i], tt[i], wt[i]);
    }
    printf("\nAverage Waiting Time = %f\n", avgwt);
    printf("Average Turnaround Time = %f", avgtt);
    return 0;
}
